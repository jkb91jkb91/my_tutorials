pipeline {
	agent any
    
    environment {
        PRIVATE_KEY = credentials('kube_ssh')
    }	
    parameters {
        choice(
            name: 'WORKERS_NUMBER', 
            choices: ['1', '3', '5'], 
            description: 'Choose how much workers you need, default is 1'
        )
        choice(
            name: 'EC2_TYPE', 
            choices: ['t3.micro', 't3.small'], 
            description: 'Choose EC2 instance type'
        )
    }
	stages {
	    stage('Fetch code') {
            steps {
                sshagent(['SSH_private_key']) {
				    git branch: 'main', url: 'git@github.com:jkb91jkb91/my_tutorials.git'
                }
            }
	    }
        stage('Create MASTER x1') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'awscredentials']]) {
                    script {
                        sh '''
                        cd terraform/projekt_bartek
                        terraform init
                        terraform apply -target=module.vpc -auto-approve
                        terraform apply -target=module.ec2_master -var="ec2_count=1" -var="ec2_instance_type=${EC2_TYPE}" -auto-approve
                        terraform apply -target=module.ec2_worker -var="ec2_count=${WORKERS_NUMBER}" -var="ec2_instance_type=${EC2_TYPE}" -auto-approve
                        #DELETE DNS
                        IP=$(cat $PWD/ANSIBLE/master/hosts | grep -oE '[0-9]+.[0-9]+.[0-9]+.[0-9]+')
                        ssh -i /tmp/master-key.pem -o StrictHostKeyChecking=no ubuntu@${IP} 'kubectl delete pod -n kube-system -l k8s-app=kube-dns'
                        '''
                    }
                }
            }
	    }
    }
}
